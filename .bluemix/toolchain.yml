version: '2'
messages:
  $i18n: locales.yml
template:
  name: Node.js Deploy to VSI
  description: Deploy a Node.js application to an existing VSI instance.
  icon: icon.svg
  required:
    - terraform-repo
    - sample-build
    - sample-repo
toolchain:
  name: 'vsi-toolchain-{{timestamp}}'
services:
  terraform-repo: 

    $switch:
      - $expr: $env.source_provider
      - $default: 'hostedgit'
        service_id: hostedgit
        parameters:
          repo_url: "https://github.com/triceam/vsi-terraform"
          repo_name: "vsi-terraform-{{timestamp}}"
          type: clone
          has_issues: true
          enable_traceability: true
      - $case: 'githubconsolidated'
        service_id: githubconsolidated
        parameters:
          repo_url: "https://github.com/triceam/vsi-terraform"
          repo_name: "vsi-terraform-{{timestamp}}"
          type: clone
          has_issues: true
          enable_traceability: true
      - $case: 'github_integrated'
        service_id: github_integrated
        parameters:
          repo_url: "https://github.com/triceam/vsi-terraform"
          repo_name: "vsi-terraform-{{timestamp}}"
          type: clone
          has_issues: true
          enable_traceability: true
          
    parameters:
      repo_url: "https://github.com/triceam/vsi-terraform"
      repo_name: "vsi-terraform-{{timestamp}}"
      type: clone
      has_issues: true
      enable_traceability: true

  sample-repo:
    $switch:
      - $expr: $env.source_provider
      - $default: 'hostedgit'
        service_id: hostedgit
        parameters:
          repo_name: '{{toolchain.name}}'
          repo_url: $env.app_repo || 'https://github.com/open-toolchain/node-hello-world'
          type: $env.type || 'clone'
          has_issues: true
          enable_traceability: true
      - $case: 'githubconsolidated'
        service_id: githubconsolidated
        parameters:
          repo_name: '{{toolchain.name}}'
          repo_url: $env.app_repo || 'https://github.com/open-toolchain/node-hello-world'
          type: $env.type || 'clone'
          visibility: public
      - $case: 'github_integrated'
        service_id: github_integrated
        parameters:
          repo_name: '{{toolchain.name}}'
          repo_url: $env.app_repo || 'https://github.com/open-toolchain/node-hello-world'
          type: $env.type || 'clone'
          has_issues: true
          enable_traceability: true
  sample-build:
    service_id: pipeline
    parameters:
      services:
        - sample-repo
      name: 'delivery-pipeline'
      ui-pipeline: true
      configuration:
        content:
          $text: pipeline.yml
        env:
          SAMPLE_REPO: sample-repo
          VSI_HOST: '{{form.pipeline.parameters.vsi-host}}'
          PRIVATE_KEY: '{{form.pipeline.parameters.private-key}}'
          API_KEY: '{{form.pipeline.parameters.api-key}}'
        execute: true
  webide:
    service_id: orion
form:
  pipeline:
    parameters:
      vsi-host: ''
      private-key: ''
      api-key: ''
    schema:
      $ref: deploy.json
